spring.application.name=currency-exchange-v2

spring.cloud.config.enabled=false
#spring.config.import=optional:configserver:http://localhost:8888
server.port=8000


spring.h2.console.path=/h2-console/

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enable=true
#This modifies the default Spring Boot behavior and populates the data after the schema is generated by Hibernate.
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

resilience4j.retry.instances.sample-api-dummy-url.maxAttempts=5
resilience4j.retry.instances.sample-api-dummy-url.waitDuration=1s
resilience4j.retry.instances.sample-api-dummy-url.enableExponentialBackoff=true

resilience4j.retry.instances.sample-api.maxAttempts=5 
#resilience4j.retry.instances.sample-api.maxRetryAttempts=5 #OLD
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

resilience4j.bulkhead.instances.sample-api.max-concurrent-calls=10

spring.sleuth.sampler.probability=1.0

# if not default
#spring.zipkin.baseUrl=http://localhost:9411/

# check service
# http://localhost:8100/currency-conversion/from/USD/to/INR/quantity/90
# http://localhost:8100/currency-conversion-feign/from/USD/to/INR/quantity/90



